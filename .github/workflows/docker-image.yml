name: Docker Image CI

on:
  push:
    branches: [ master ]

jobs:
  create-tag-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
      - run: composer install --no-progress --ansi
      - id: set-matrix
        run: echo "::set-output name=matrix::$(php .github/tag-builder/index.php)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  build:
    needs: create-tag-matrix
    runs-on: ubuntu-latest
    env:
      ORGA: 'zyuzka'
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.create-tag-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: debian/buster/8.0/Dockerfile
          tags: zyuzka/php:8.0-debian-buster
          platforms: linux/amd64,linux/arm64
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GIT_AUTH_TOKEN }}
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          file: ${{ matrix.image }}
#          tags: ${{ join(matrix.tags) }}
#          platforms: linux/amd64,linux/arm64
#          secrets: |
#            GIT_AUTH_TOKEN=${{ secrets.GIT_AUTH_TOKEN }}
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#        with:
#          version: latest
#      - name: Login to docker hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#      - name: Install platform emulator collection
#        run: docker run --privileged --rm tonistiigi/binfmt --install all
#      - name: Build images
#        run: docker buildx build --push . --file ${{ matrix.image }} --tag ${{ join(matrix.tags, ' --tag ') }} --platform linux/amd64,linux/arm64
