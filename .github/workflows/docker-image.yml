name: Docker Image CI

on:
  push:
    branches: [ master ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  buildx:
    runs-on: ubuntu-latest
    needs: [checkout]
    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
  docker-login:
    runs-on: ubuntu-latest
    needs: [checkout, buildx]
    steps:
      - name: Login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
  platform-collection:
    runs-on: ubuntu-latest
    needs: [checkout, buildx, docker-login]
    steps:
      - name: Install platform emulator collection
        run: docker run --privileged --rm tonistiigi/binfmt --install all
  build:
    runs-on: ubuntu-latest
    needs: [checkout, buildx, docker-login, platform-collection]
    env:
      ORGA: 'zyuzka'
    strategy:
      fail-fast: false
      matrix:
        include:
          ### Alpine 3.11
          - image: 'alpine/3.11/7.3/Dockerfile'
            tags: [ "$ORGA/php:7.3" ]
            disto-name: 'Alpine'
            version: '3.11'
            php-version: '7.3'

          - image: 'alpine/3.11/7.4/Dockerfile'
            tags: [ "$ORGA/php:7.4" ]


          ### Alpine 3.12
          - image: 'alpine/3.12/7.3/Dockerfile'
            tags: [ "$ORGA/php:latest", "$ORGA/php:7.3", "$ORGA/php:7.4-alpine3.12" ]

          - image: 'alpine/3.12/7.4/Dockerfile'
            tags: [ "$ORGA/php:7.4" ]

          - image: 'alpine/3.12/8.0/Dockerfile'
            tags: [ "$ORGA/php:8.0" ]

          ### Alpine 3.13
          - image: 'alpine/3.13/7.4/Dockerfile'
            tags: [ "$ORGA/php:7.4" ]

          - image: 'alpine/3.13/8.0/Dockerfile'
            tags: [ "$ORGA/php:8.0" ]
    steps:
      - name: "Build: ${{ matrix.disto-name }} / ${{ matrix.version }} / PHP: ${{ matrix.php-version }} (${{ join(matrix.tags) }})"
        run: docker buildx build --push . --file ${{ matrix.image }} --tag ${{ join(matrix.tags, ' --tag ') }} --platform linux/amd64,linux/arm64
